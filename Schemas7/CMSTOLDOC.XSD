<?xml version="1.0" encoding="Windows-1252"?>
<!-- Copyright 1994-2016 SYSPRO Ltd.-->
<!-- 
     Schema for the Contact Management Organisation Post Business Object
-->
<xsd:schema elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
	<xsd:element name="PostList">
		<xsd:annotation>
			<xsd:documentation>This is the root element for the XML in</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Item" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>This is the parent node. More than one item can be processed per call of the object.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="FileName">
								<xsd:annotation>
									<xsd:documentation>This contains the complete file name. Only used when deleting a file. When adding a list, the file name will be generated.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="Header">
								<xsd:annotation>
									<xsd:documentation>The parent node for the parts of the file name.</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element name="ListType">
											<xsd:annotation>
												<xsd:documentation>3 different types of lists can be defined. "C/c" = "Company", "R/r" = "Role", and "O/o" = "Operator".</xsd:documentation>
											</xsd:annotation>
											<xsd:simpleType>
												<xsd:restriction base="xsd:string">
													<xsd:enumeration value="C"/>
													<xsd:enumeration value="O"/>
													<xsd:enumeration value="R"/>
													<xsd:enumeration value="c"/>
													<xsd:enumeration value="o"/>
													<xsd:enumeration value="r"/>
												</xsd:restriction>
											</xsd:simpleType>
										</xsd:element>
										<xsd:element name="ListCode" type="xsd:string">
											<xsd:annotation>
												<xsd:documentation>This is the unique identifier of the ListType, i.e. the Company ID, Role name or the Operator code</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
										<xsd:element name="Description" type="xsd:string">
											<xsd:annotation>
												<xsd:documentation>This is the description of the organizational list as defined by the operator. This is used as part of the name of the txt file.</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
									</xsd:sequence>
								</xsd:complexType>
							</xsd:element>
							<xsd:element name="Body">
								<xsd:annotation>
									<xsd:documentation>Parent node for each row in   the body of the xml in.</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element name="Row" minOccurs="0" maxOccurs="unbounded">
											<xsd:annotation>
												<xsd:documentation>The parent node for the row elements. The Row elements are static include lists. Each row in the list has several parts.</xsd:documentation>
											</xsd:annotation>
											<xsd:complexType>
												<xsd:sequence>
													<xsd:element name="Level">
														<xsd:annotation>
															<xsd:documentation>Level (00 - 15). There cannot be more than 15 levels defined.</xsd:documentation>
														</xsd:annotation>
														<xsd:simpleType>
															<xsd:restriction base="xsd:integer"/>
														</xsd:simpleType>
													</xsd:element>
													<xsd:element name="Parent">
														<xsd:annotation>
															<xsd:documentation>P-Parent node</xsd:documentation>
														</xsd:annotation>
														<xsd:simpleType>
															<xsd:restriction base="xsd:string"/>
														</xsd:simpleType>
													</xsd:element>
													<xsd:element name="Type">
														<xsd:annotation>
															<xsd:documentation>This is the organization type. A-Account, C-Customer, S-Supplier.</xsd:documentation>
														</xsd:annotation>
														<xsd:simpleType>
															<xsd:restriction base="xsd:string">
																<xsd:enumeration value="A"/>
																<xsd:enumeration value="C"/>
																<xsd:enumeration value="S"/>
															</xsd:restriction>
														</xsd:simpleType>
													</xsd:element>
													<xsd:element name="Code" type="xsd:string">
														<xsd:annotation>
															<xsd:documentation>Account, Customer or Supplier code. </xsd:documentation>
														</xsd:annotation>
													</xsd:element>
													<xsd:element name="Name" type="xsd:string" minOccurs="0">
														<xsd:annotation>
															<xsd:documentation>Account, Customer or Supplier name. This is not used as the name will be read off the file based on the organization code supplied.</xsd:documentation>
														</xsd:annotation>
													</xsd:element>
												</xsd:sequence>
											</xsd:complexType>
										</xsd:element>
										<xsd:element name="ExcludeItem" minOccurs="0" maxOccurs="unbounded">
											<xsd:annotation>
												<xsd:documentation>The parent node for the exclude items. These are the items to exclude from a list.</xsd:documentation>
											</xsd:annotation>
											<xsd:complexType>
												<xsd:sequence>
													<xsd:element name="ExRow" maxOccurs="unbounded">
														<xsd:annotation>
															<xsd:documentation>The ExRow elements are static exclude lists. Each row in the list has several parts.</xsd:documentation>
														</xsd:annotation>
														<xsd:complexType>
															<xsd:sequence>
																<xsd:element name="ExType">
																	<xsd:annotation>
																		<xsd:documentation>This is the organization type. A-Account, C-Customer, S-Supplier.</xsd:documentation>
																	</xsd:annotation>
																	<xsd:simpleType>
																		<xsd:restriction base="xsd:string">
																			<xsd:enumeration value="A"/>
																			<xsd:enumeration value="C"/>
																			<xsd:enumeration value="S"/>
																		</xsd:restriction>
																	</xsd:simpleType>
																</xsd:element>
																<xsd:element name="ExCode" type="xsd:string">
																	<xsd:annotation>
																		<xsd:documentation>Account, Customer or Supplier code.</xsd:documentation>
																	</xsd:annotation>
																</xsd:element>
																<xsd:element name="ExName" type="xsd:string" minOccurs="0">
																	<xsd:annotation>
																		<xsd:documentation>Account, Customer or Supplier name. This is not used as the name will be read off the file based on the organization code supplied.</xsd:documentation>
																	</xsd:annotation>
																</xsd:element>
															</xsd:sequence>
														</xsd:complexType>
													</xsd:element>
												</xsd:sequence>
											</xsd:complexType>
										</xsd:element>
										<xsd:element name="ConditionItem" minOccurs="0" maxOccurs="unbounded">
											<xsd:annotation>
												<xsd:documentation>The parent node for the condition items. ConditionItem defines the conditional logic.</xsd:documentation>
											</xsd:annotation>
											<xsd:complexType>
												<xsd:sequence>
													<xsd:element name="OrganizationType">
														<xsd:annotation>
															<xsd:documentation>This is the organization type, to which the condition will apply. A-Account, C-Customer, S-Supplier.</xsd:documentation>
														</xsd:annotation>
														<xsd:simpleType>
															<xsd:restriction base="xsd:string">
																<xsd:enumeration value="A"/>
																<xsd:enumeration value="C"/>
																<xsd:enumeration value="S"/>
															</xsd:restriction>
														</xsd:simpleType>
													</xsd:element>
													<xsd:element name="Selection">
														<xsd:annotation>
															<xsd:documentation>A-All, C-Condition</xsd:documentation>
														</xsd:annotation>
														<xsd:simpleType>
															<xsd:restriction base="xsd:string">
																<xsd:enumeration value="A"/>
																<xsd:enumeration value="C"/>
															</xsd:restriction>
														</xsd:simpleType>
													</xsd:element>
													<xsd:element name="Item1" maxOccurs="unbounded">
														<xsd:annotation>
															<xsd:documentation>The Item1 elements each describe a condition to be applied. Each item has several parts.</xsd:documentation>
														</xsd:annotation>
														<xsd:complexType>
															<xsd:sequence>
																<xsd:element name="IfAndOr">
																	<xsd:annotation>
																		<xsd:documentation>Logic to be applied for this condition. If, And, Or</xsd:documentation>
																	</xsd:annotation>
																</xsd:element>
																<xsd:element name="OpenBracket">
																	<xsd:annotation>
																		<xsd:documentation>Must be supplied if you wish the condition to be applied within brackets. Must match the CloseBracket element.</xsd:documentation>
																	</xsd:annotation>
																</xsd:element>
																<xsd:element name="Field1">
																	<xsd:annotation>
																		<xsd:documentation>Field or variable</xsd:documentation>
																	</xsd:annotation>
																</xsd:element>
																<xsd:element name="Condition">
																	<xsd:annotation>
																		<xsd:documentation>The two fields will be compared to each other based on this condition. EQ-equals, NE-not equal to, GT-greater than, LT-less than, GE-greater than or equal to, LE-less than or equal to, CO-contains, NC-does not contain, BW-begins with, EW-ends with</xsd:documentation>
																	</xsd:annotation>
																</xsd:element>
																<xsd:element name="Field2">
																	<xsd:annotation>
																		<xsd:documentation>Field, variable, string or constant</xsd:documentation>
																	</xsd:annotation>
																</xsd:element>
																<xsd:element name="CloseBracket">
																	<xsd:annotation>
																		<xsd:documentation>Must match the OpenBracket element.</xsd:documentation>
																	</xsd:annotation>
																</xsd:element>
															</xsd:sequence>
														</xsd:complexType>
													</xsd:element>
												</xsd:sequence>
											</xsd:complexType>
										</xsd:element>
									</xsd:sequence>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="PostList" type="xsd:anyURI" use="optional"/>
		</xsd:complexType>
	</xsd:element>
</xsd:schema>
