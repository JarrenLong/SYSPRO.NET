<?xml version="1.0" encoding="Windows-1252"?>
<!-- Copyright 1994-2014 SYSPRO Ltd.-->
<!-- 
     This is the Schema to demonstrate
     use of the Sales Order Back Order Release to Reserved Business Object
-->
<xsd:schema elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:element name="PostSorBackOrderReleaseReserved">
    <xsd:annotation>
      <xsd:documentation>This is the Root element.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Item">
          <xsd:annotation>
            <xsd:documentation>The Item node determines the release information for each sales order line.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="Customer" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>Entry in the Customer element is optional, but if supplied will be validated against the Sales order header file. May not be more than 7 characters. If customer numeric key - must be a valid numeric value.  </xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:whiteSpace value="preserve"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element name="SalesOrder">
                <xsd:annotation>
                  <xsd:documentation>Must be supplied. May contain a maximum of 6 characters. Must be a valid numeric value if sales order key for the company is numeric. Sales order must be on file. Sales order status may not be cancelled, complete, In process, a Forward order or in suspense. </xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:whiteSpace value="preserve"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element name="SalesOrderLine">
                <xsd:annotation>
                  <xsd:documentation>Must be supplied. Must be a valid numeric value. Sales order line must existson the sales order detail file and must be a merchandise line. </xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:whiteSpace value="preserve"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element name="StockCode" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>Stock code  is optional, but if supplied will be validated against the Sales order detail line. May not be more than 30 characters for alphanumeric key type and 15 characters for numeric key type (must be valid numeric value if numeric key type). Stock code will be validated against the Inventory master file. </xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:whiteSpace value="preserve"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element name="Warehouse" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>Warehouse is optional, but if supplied will be validated against the Sales order detail line. May not be more than 2 characters.</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:whiteSpace value="preserve"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element name="Quantity" type="xsd:string" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>The quantity can be left as zero if the complete back order quantity is to be reserved. Otherwise, it must be supplied for a stock code that does not make use of unit quantity processing. The quantity can still be supplied for a stock code that makes use of unit quantity processing , but then the units and pieces must NOT be supplied for that item. May not have more than 7 characters for integers and 3 characters for decimals. The number of decimals will be validated against the number of decimals required for the stock code. If the ZeroReservedQuantity option is selected then this element must contain zero. </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element name="UnitOfMeasure" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>Unit of measure of the stock being reserved. The unit of measure if supplied must be the order unit of measure of the detail line or stocking unit of measure of the stock code on the line. This unit of measure will apply to all quantity elements supplied (eg. BinQuantity and SerialQuantity). If the element is not supplied it will default to the order unit of measure for the stock code.</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:whiteSpace value="preserve"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element name="Units" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>Must contain the number of units to import for a stock code that makes use of unit quantity processing, if the quantity is not supplied as a decimal value. Either the quantity or Units and Pieces must be supplied for the item.  May not be more than 7 characters.</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:whiteSpace value="preserve"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element name="Pieces" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>Must contain the number of pieces to release for a stock code that makes use of unit quantity processing, if the quantity is not supplied as a decimal value, and is not assumed from the line.  May not be more than 3 characters. </xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:whiteSpace value="preserve"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element name="Lot" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>A lot must be supplied if the stock code is lot traceable, and the option to supply detailed allocations is selected. The lot may not be more than 10 characters. If the key lot type for the company is numeric the lot supplied must be a valid numeric value. The lot supplied will be validated against the Lot traceable file for the stock code. Lots do not have to be supplied if Automatic depletion is in use - unless the stock item is both lot traceable and serialized.</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:whiteSpace value="preserve"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element name="Serials" minOccurs="0" maxOccurs="unbounded">
                <xsd:annotation>
                  <xsd:documentation>This is the node for the set of serials affected by this transaction, if serial tracking is installed. If the stock code for the associated detail line does not make use of serial tracking, or detailed allocations are not required, then any entries in the 'Serials' node will be ignored. It is possible to release several  several serials for the same order line instead of just one serial per line. Take note that the serial numbers do not have to be supplied when ZeroReservedQuantity is selected - all serials for the line will be de-allocated automatically. The quantities supplied for all serial numbers must add up to the release quantity supplied for the line when releasing the back order quantity to reserved. </xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="SerialNumber" minOccurs="0">
                      <xsd:annotation>
                        <xsd:documentation>At least one serial number must be supplied if Serial tracking is required, the stock item is a serialized item, and detailed allocations are required - unless ZeroReservedQuantity is selected or the capture method is at time of invoice and lots or bins are not required. May not be more than 20 characters for alphanumeric key type and 15 characters for numeric key type (must be valid numeric value if numeric key type).  Serial number must exist on file and have stock available. </xsd:documentation>
                      </xsd:annotation>
                      <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                          <xsd:whiteSpace value="preserve"/>
                        </xsd:restriction>
                      </xsd:simpleType>
                    </xsd:element>
                    <xsd:element name="SerialQuantity" minOccurs="0">
                      <xsd:annotation>
                        <xsd:documentation>A serial quantity must be supplied for each serial number if the stock code does not make use of unit quantity processing. If the stock item makes use of unit processing - the quantity can either be supplied as a decimal value or else as Units and Pieces. Unit quantity processing will only apply to a batch serial item. Serial quantity may not have more than 7 characters for integer and 3 characters for decimals.</xsd:documentation>
                      </xsd:annotation>
                      <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                          <xsd:whiteSpace value="preserve"/>
                        </xsd:restriction>
                      </xsd:simpleType>
                    </xsd:element>
                    <xsd:element name="SerialUnits" minOccurs="0">
                      <xsd:annotation>
                        <xsd:documentation>Must contain the number of units to import for a batch Serial for a stock code that makes use of unit quantity processing, if the quantity is not supplied as a decimal value.  May not be more than 7 characters.  </xsd:documentation>
                      </xsd:annotation>
                      <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                          <xsd:whiteSpace value="preserve"/>
                        </xsd:restriction>
                      </xsd:simpleType>
                    </xsd:element>
                    <xsd:element name="SerialPieces" minOccurs="0">
                      <xsd:annotation>
                        <xsd:documentation>Must contain the number of pieces to import for a batch Serial for a stock code that makes use of unit quantity processing, if the quantity is not supplied as a decimal value.  May not be more than 3 characters.</xsd:documentation>
                      </xsd:annotation>
                      <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                          <xsd:whiteSpace value="preserve"/>
                        </xsd:restriction>
                      </xsd:simpleType>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element name="Bins" minOccurs="0" maxOccurs="unbounded">
                <xsd:annotation>
                  <xsd:documentation>This is the node for the set of bins affected by this transaction, if multiple bins is installed. If the warehouse for the associated detail line does not make use of multiple bins, or detailed allocations are not required, then any entries in the 'Bins' node will be ignored. It is possible to release several bins for the same order line instead of just one bin per line. Take note that the bins do not have to be supplied when ZeroReservedQuantity is selected - any bins for the line will be de-allocated automatically when this option is selected. The quantities supplied for all bins must add up to the release quantity supplied for the line when releasing the back order quantity to reserved. Bins do not have to be supplied if Automatic depletion is in use - unless the stock item is both lot traceable and serialized.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="BinLocation" minOccurs="0">
                      <xsd:annotation>
                        <xsd:documentation>At least one bin must be supplied if the company makes use of multiple bins, and the warehouse on the detail line also uses multiple bins. Bins must not be supplied if detail allocations are not requested for the line. 
BinLocation may not be more than 6 characters. Will be validated against the inventory Bin file for the stock code. Take note that the bins do not have to be supplied when ZeroReservedQuantity is selected - any bins for the line will be de-allocated automatically when this option is selected. The quantities supplied for all bins must add up to the quantity supplied for the line when releasing the back order quantity to reserved. Bins do not have to be supplied if Automatic depletion is in use - unless the stock item is both lot traceable and serialized.</xsd:documentation>
                      </xsd:annotation>
                      <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                          <xsd:whiteSpace value="preserve"/>
                        </xsd:restriction>
                      </xsd:simpleType>
                    </xsd:element>
                    <xsd:element name="BinQuantity" minOccurs="0">
                      <xsd:annotation>
                        <xsd:documentation>A bin quantity must be supplied for every bin location supplied if the stock code does not make use of unit quantity processing. If the stock item makes use of unit processing - the quantity can either be supplied as a decimal value or else as Units and Pieces. The bin quantity may not have more than 7 characters for integers and 3 characters for decimals. </xsd:documentation>
                      </xsd:annotation>
                      <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                          <xsd:whiteSpace value="preserve"/>
                        </xsd:restriction>
                      </xsd:simpleType>
                    </xsd:element>
                    <xsd:element name="BinUnits" minOccurs="0">
                      <xsd:annotation>
                        <xsd:documentation>Must contain the number of units to release for a Bin location for a stock code that makes use of unit quantity processing, if the quantity is not supplied as a decimal value.  May not be more than 7 characters.  </xsd:documentation>
                      </xsd:annotation>
                      <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                          <xsd:whiteSpace value="preserve"/>
                        </xsd:restriction>
                      </xsd:simpleType>
                    </xsd:element>
                    <xsd:element name="BinPieces" minOccurs="0">
                      <xsd:annotation>
                        <xsd:documentation>Must contain the number of pieces to release for a Bin location for a stock code that makes use of unit quantity processing, if the quantity is not supplied as a decimal value.  May not be more than 3 characters.</xsd:documentation>
                      </xsd:annotation>
                      <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                          <xsd:whiteSpace value="preserve"/>
                        </xsd:restriction>
                      </xsd:simpleType>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element name="ZeroReservedQuantity" type="xsd:string" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>The sales order line reserved quantity will be set to zero, all quantities will be moved to back order and all serial, bins and lots will be de-allocated.  The Quantity supplied must be zero if this option is selected. </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element name="ReserveStockRequestAllocs" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>This element is only relevant if the SO Option to allow reserving of stock is selected, and stock is being released to reserved. If set to 'Y', then any lot bin or serial item must contain the information for detailed allocation of the quantity requested.  If set to 'N', then a lot , serial or bin item will be reserved at the warehouse level. If a line already contains a reserved quantity, then the allocation status of the line cannot be changed.  If the element is not supplied, then the parameter ReserveStockRequestAllocs will be used, or the SYSPRO company setting will be used.</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:whiteSpace value="preserve"/>
                    <xsd:enumeration value="N"/>
                    <xsd:enumeration value="Y"/>
                    <xsd:enumeration value=""/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
</xsd:schema>
