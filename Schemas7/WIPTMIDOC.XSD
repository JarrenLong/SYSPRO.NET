<?xml version="1.0" encoding="Windows-1252"?>
<!-- Copyright 1994-2014 SYSPRO Ltd.-->
<!-- 
     Schema for the Post Material Business Object
-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:element name="PostMaterial">
    <xsd:annotation>
      <xsd:documentation>This is the root element.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType mixed="false">
      <xsd:sequence>
        <xsd:element name="Item" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:documentation>This is the top element for all data required for the transaction.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType mixed="false">
            <xsd:sequence>
              <xsd:element name="Journal" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>This is the journal number to which the transaction journal entries generated will be added. It must be valid for the specified posting period and may not have been printed already. If not supplied, a new journal will be created.</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:whiteSpace value="preserve"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element name="Job">
                <xsd:annotation>
                  <xsd:documentation>This element is mandatory. It specifies the job to which the material allocation is being issued to. The format is alphanumeric or numeric depending on the configuration option within SYSPRO. </xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:whiteSpace value="preserve"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element name="NonStockedFlag" default="N" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>This element is optional. The default is "N". If the allocation stock code is non-stocked you can either set the flag or put "**" in the Warehouse. It will also accept the alternative tag "NonStocked" from the Build Material Issue program (WIPRMI).</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:whiteSpace value="preserve"/>
                    <xsd:enumeration value="N"/>
                    <xsd:enumeration value="Y"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element name="Warehouse" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>This element is mandatory if the allocation is a stocked item and it must stock the specified stock item.</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:whiteSpace value="preserve"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element name="StockCode">
                <xsd:annotation>
                  <xsd:documentation>This element is mandatory and must be stocked in the specified warehouse. If there is no allocation for the specified stock code an error message will occur. It will not create the allocation.</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:whiteSpace value="preserve"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element name="Line" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>This element is optional if there is only 1 allocation for that stock code. If there is more than 1 the line number has to be entered. If there is no allocation for the specified stock code, line number combination an error message will occur. It will not create the allocation.</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:whiteSpace value="preserve"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element name="QtyIssued">
                <xsd:annotation>
                  <xsd:documentation>This element is mandatory and is the qty you are going to issue to the job. It will also accept the alternative tag "QuantityToIssue" from the Build Material Issue program (WIPRMI).</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:whiteSpace value="preserve"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element name="Reference" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>This element is optional.</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:whiteSpace value="preserve"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element name="Notation" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>This element is optional.</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:whiteSpace value="preserve"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element name="LedgerCode" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>Ledger code against which the merchandise amount of the issued items is to be distributed. If the ledger code is not returned then the WIP control account defined against the job is used.</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:whiteSpace value="preserve"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element name="PasswordForLedgerCode" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>If ledger codes require a password, this element must contain the relevant password for the specified ledger code.</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:whiteSpace value="preserve"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element name="ProductClass" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>This element is mandatory if the allocations stock code is non-stocked.</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:whiteSpace value="preserve"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element name="UnitCost" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>This element is manditory if the allocations stock code is non-stocked.</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:whiteSpace value="preserve"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element name="AllocCompleted" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>This element is mandatory and specifies whether the allocation is complete (Y - Yes, N - No). If there is no quantity outstanding, the default is set to "Y" else it is set to "N".</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:whiteSpace value="preserve"/>
                    <xsd:enumeration value="N"/>
                    <xsd:enumeration value="Y"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element name="FifoBucket" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>This element is optional. It is only available if FIFO is installed. When actual costing is by lots and you are processing a positive issue for a lot traceable item and auto depletion of actual cost buckets is not switched on then this element should be supplied. (If a bucket is not supplied in this scenario, the system will check and if only one valid bucket exists this will be used.) When processing a negative issue you must supply a bucket. </xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:whiteSpace value="preserve"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element name="Bins" maxOccurs="unbounded">
                <xsd:complexType mixed="false">
                  <xsd:all>
                    <xsd:element name="BinLocation" minOccurs="0">
                      <xsd:annotation>
                        <xsd:documentation>This element is mandatory if multiple bins is set on and contains the bin location of the stock being issued.</xsd:documentation>
                      </xsd:annotation>
                      <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                          <xsd:whiteSpace value="preserve"/>
                        </xsd:restriction>
                      </xsd:simpleType>
                    </xsd:element>
                    <xsd:element name="BinQuantity" minOccurs="0">
                      <xsd:annotation>
                        <xsd:documentation>This element is mandatory if multiple bins is set on. The total bin quantity must match the quantity specified for the transaction.</xsd:documentation>
                      </xsd:annotation>
                      <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                          <xsd:whiteSpace value="preserve"/>
                        </xsd:restriction>
                      </xsd:simpleType>
                    </xsd:element>
                  </xsd:all>
                </xsd:complexType>
              </xsd:element>
              <xsd:element name="Lot" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>A lot number must be supplied if the stock code is lot traceable. The lot supplied will be validated against the Lot traceable file for the stock code. Lots do not have to be supplied if Automatic depletion is in use - unless the stock item is both lot traceable and serialized.</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:whiteSpace value="preserve"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element name="LotConcession" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>This element is optional. However, if element 'IgnoreWarnings' is set to 'N', it must be supplied.</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:whiteSpace value="preserve"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element name="Serials" maxOccurs="unbounded">
                <xsd:complexType mixed="false">
                  <xsd:all>
                    <xsd:element name="SerialNumber" minOccurs="0">
                      <xsd:annotation>
                        <xsd:documentation>Serial number from which serial quantity must be issued.</xsd:documentation>
                      </xsd:annotation>
                      <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                          <xsd:whiteSpace value="preserve"/>
                        </xsd:restriction>
                      </xsd:simpleType>
                    </xsd:element>
                    <xsd:element name="SerialQuantity" minOccurs="0">
                      <xsd:annotation>
                        <xsd:documentation>This element is mandatory and specifies the quantity to issue for the specified serial number. If within the 'Serials' group and manual serial, it can only be 1 or -1. If within the 'SerialAllocation' group, it is the total quantity to be received for the specified range. The total quantity for all serial numbers specified must match the quantity specified for the transaction.</xsd:documentation>
                      </xsd:annotation>
                      <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                          <xsd:whiteSpace value="preserve"/>
                        </xsd:restriction>
                      </xsd:simpleType>
                    </xsd:element>
                    <xsd:element name="SerialFifoBucket" minOccurs="0">
                      <xsd:annotation>
                        <xsd:documentation>This element is only required when actual costing is by serials. When actual costing is by serials and you are processing a positive issue for a batch serialized item and auto depletion of actual cost buckets is not switched on then this element should be supplied. (If a bucket is not supplied in this scenario, the system will check and if only one valid bucket exists this will be used.) When actual costing is by serials and you are processing a negative issue for a batch serialized item you must supply a bucket.</xsd:documentation>
                      </xsd:annotation>
                      <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                          <xsd:whiteSpace value="preserve"/>
                        </xsd:restriction>
                      </xsd:simpleType>
                    </xsd:element>
                  </xsd:all>
                </xsd:complexType>
              </xsd:element>
              <xsd:element name="SerialAllocation" maxOccurs="unbounded">
                <xsd:complexType mixed="false">
                  <xsd:all>
                    <xsd:element name="FromSerialNumber" minOccurs="0">
                      <xsd:annotation>
                        <xsd:documentation>This element specifies the starting serial number to be allocated.</xsd:documentation>
                      </xsd:annotation>
                      <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                          <xsd:whiteSpace value="preserve"/>
                        </xsd:restriction>
                      </xsd:simpleType>
                    </xsd:element>
                    <xsd:element name="ToSerialNumber" minOccurs="0">
                      <xsd:annotation>
                        <xsd:documentation>This element specifies the ending serial number to be allocated. If this element is not supplied, serial numbers will be allocated starting at the FromSerialNumber until the specified quantity has been allocated.</xsd:documentation>
                      </xsd:annotation>
                      <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                          <xsd:whiteSpace value="preserve"/>
                        </xsd:restriction>
                      </xsd:simpleType>
                    </xsd:element>
                    <xsd:element name="SerialQuantity" minOccurs="0">
                      <xsd:annotation>
                        <xsd:documentation>This element is mandatory and specifies the quantity to issue for the specified serial number. If within the 'Serials' group and manual serial, it can only be 1 or -1. If within the 'SerialAllocation' group, it is the total quantity to be received for the specified range. The total quantity for all serial numbers specified must match the quantity specified for the transaction.</xsd:documentation>
                      </xsd:annotation>
                      <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                          <xsd:whiteSpace value="preserve"/>
                        </xsd:restriction>
                      </xsd:simpleType>
                    </xsd:element>
                  </xsd:all>
                </xsd:complexType>
              </xsd:element>
              <xsd:element name="MaterialReference" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>You can use the material additional reference field for your own use to hold any extra information required. The format is stored on the job detail posting file.</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:whiteSpace value="preserve"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element name="CoProductLine" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>If you are issuing an item that exists more than once as a co-product parent part against the notional part then you must enter the co-product's line number which will have the cost apportioned to it.</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element name="eSignature" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>If required, this element must contain a GUID, for the eSignature system to accept the transaction as having been authenticated. The GUID format is in the format {36303032-3330-3031-3038-323434363433}, where the numbers can be replaced with any character. It is up to the developer to have requested a password to protect the transaction. An example is that a GUID associated with the act of entering a valid password could be obtained and presented.</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:whiteSpace value="preserve"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element name="Version" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>When performing a positive issue this indicates the version to use when an ECC item uses the ECC consumption method deplete oldest.  Only required if the item is serialized or actual costing is switched on and automatic depletion of actual cost buckets is not switched on. 
When performing a reversal of an ECC controlled item and  the ECC consumption method is deplete oldest or current  then the version needs to be supplied and is validated by checking the positive job issues. (When the ECC consumption method is current if the version is not supplied then the current inventory master version will be used).</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:whiteSpace value="preserve"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element name="Release" minOccurs="0">
                <xsd:annotation>
                  <xsd:documentation>When performing a positive issue this indicates the release to use when an ECC item uses the ECC consumption method deplete oldest.  Only required if the item is serialized or actual costing is switched on and automatic depletion of actual cost buckets is not switched on. 
When performing a reversal of an ECC controlled item and  the ECC consumption method is deplete oldest or current  then the release needs to be supplied and is validated by checking the positive job issues. (When the ECC consumption method is current if the release is not supplied then the current inventory master release will be used).</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:whiteSpace value="preserve"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
</xsd:schema>
